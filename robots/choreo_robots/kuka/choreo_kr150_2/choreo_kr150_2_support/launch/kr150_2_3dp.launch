<?xml version="1.0"?>
<launch>
  <!-- arguments -->
  <arg name="sim_robot" default="true"/>

<!--	<arg name="robot_model_plugin" default="framefab_irb6600_workspace_descartes/FramefabIrb6600WorkspaceRobotModel"/>-->

	<arg name="robot_model_plugin" value="descartes_moveit/IkFastMoveitStateAdapter"/>
	<arg name="world_frame" value="/base_link"/>
	<arg name="hotend_group" value="rail_robot_manipulator"/>
	<arg name="hotend_tcp" value="eef_tcp_frame"/>
	<arg name="hotend_base" value="linear_axis_base_link"/>
	<arg name="planner" value="ompl" />

<!--	for descartes ikfast plugin-->
	<param name="ikfast_base_frame" type="string" value="linear_axis_base_link"/>
	<param name="ikfast_tool_frame" type="string" value="robot_tool0"/>

  <arg name="debug_rviz" default="false"/>
  <arg name="debug_core" default="false"/> <!--Brings up the choreo core service in debug mode-->
  <arg name="save_data" default="false" />
  <arg name="save_location" default="$(env HOME)/.ros/" />

  <!-- Launches task sequence planners: requires descartes plugin for the robot model -->
  <include file="$(find choreo_task_sequence_planner)/launch/task_sequence_planning.launch">
    <arg name="robot_model_plugin" value="$(arg robot_model_plugin)"/>
		<arg name="world_frame" value="$(arg world_frame)"/>
		<arg name="hotend_group" value="$(arg hotend_group)"/>
		<arg name="hotend_tcp" value="$(arg hotend_tcp)"/>
		<arg name="hotend_base" value="$(arg hotend_base)"/>
  </include>

  <!-- Launches process planners: requires descartes plugin for the robot model -->
  <include file="$(find choreo_process_planning)/launch/process_planning.launch">
    <arg name="robot_model_plugin" value="$(arg robot_model_plugin)"/>
		<arg name="world_frame" value="$(arg world_frame)"/>
		<arg name="hotend_group" value="$(arg hotend_group)"/>
		<arg name="hotend_tcp" value="$(arg hotend_tcp)"/>
		<arg name="hotend_base" value="$(arg hotend_base)"/>
		<arg name="planner" value="$(arg planner)" />
  </include>

  <!-- Brings up action interface for trajectory execution in Rviz-->
  <node name="simulation_execution_service" pkg="choreo_simulation_execution" type="simulation_execution_service_node" output="screen"/>

	<!-- Process execution nodes: These monitor the state of robot's execution of the computed plan. They can be, and in this case are, robot or vendor specific -->
  <group>
    <group if="$(arg sim_robot)">
      <node name="choreo_execution_gatekeeper" pkg="choreo_execution_gatekeeper" type="choreo_execution_gatekeeper_service_node" output="screen"/>
    </group>
  </group>

  <!-- Brings up the core choreo service - the central coordination -->
  <include file="$(find choreo_core)/launch/choreo_core.launch">
		<arg name="world_frame" value="$(arg world_frame)"/>
    <arg name="config_path" value="$(find choreo_kr150_2_support)/config"/>
    <arg name="debug" value="$(arg debug_core)"/>
    <arg name="save_data" value="$(arg save_data)" />
    <arg name="save_location" value="$(arg save_location)" />
  </include>

  <!-- rviz w/ specified configuration -->
  <group if="$(arg debug_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find choreo_kr150_2_support)/rviz/kr150_2_3dp.rviz" output="screen" launch-prefix="xterm -e gdb --args" required="true"/>
  </group>
  <group unless="$(arg debug_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find choreo_kr150_2_support)/rviz/kr150_2_3dp.rviz" output="screen" launch-prefix="nice" required="true"/>
  </group>

  <!-- Bring up the MoveIt interface to the real or simulated robot -->
  <include file="$(find choreo_kr150_2_workspace_moveit_config)/launch/moveit_planning_execution.launch">
    <arg name="rviz" value="false"/>
    <arg name="sim" value="$(arg sim_robot)"/>
    <arg name="robot_ip" value="$(arg robot_ip)" unless="$(arg sim_robot)"/>
		<arg name="planner" value="$(arg planner)"/>
  </include>

</launch>
